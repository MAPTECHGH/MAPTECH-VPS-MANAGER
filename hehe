#!/bin/bash

# Function to display the installation menu
display_menu() {
    echo -e "\033[1;33m"
    printf '%*s\n' "${COLUMNS:-$(tput cols)}" '' | tr ' ' -
    echo "  After entering the verification code, please select an option:"
    echo "  ┌────────────────────────────────────────────────────────────────────┐"
    echo "  │ 1. Continue installation                                            │"
    echo "  │ 2. Abort installation and install UDP request                       │"
    echo "  │ 3. Install UDP custom                                               │"
    echo "  └────────────────────────────────────────────────────────────────────┘"
    printf '%*s\n' "${COLUMNS:-$(tput cols)}" '' | tr ' ' -
    echo -e "\033[0m"
}


# Function to display a progress bar
fun_bar() {
    comando[0]="$1"
    comando[1]="$2"

    (
    [[ -e $HOME/fim ]] && rm $HOME/fim
    ${comando[0]} -y > /dev/null 2>&1
    ${comando[1]} -y > /dev/null 2>&1
    touch $HOME/fim
    ) > /dev/null 2>&1 &

    tput civis
    echo -ne "  \033[1;33m◇ PLEASE WAIT... \033[1;37m- \033[1;33m["
    while true; do
        for ((i=0; i<18; i++)); do
            echo -ne "\033[1;31m#"
            sleep 0.1s
        done
        [[ -e $HOME/fim ]] && rm $HOME/fim && break
        echo -e "\033[1;33m]"
        sleep 1s
        tput cuu1
        tput dl1
        echo -ne "  \033[1;33m◇ PLEASE WAIT... \033[1;37m- \033[1;33m["
    done
    echo -e "\033[1;33m]\033[1;37m -\033[1;32m◇ DONE!\033[1;37m"
    tput cnorm
}

# Function to verify key
verif_key() {
    krm=$(echo '5:q-3gs2.o7%8:1'|rev)
    chmod +x $_Ink/list > /dev/null 2>&1
    [[ ! -e "$_Ink/list" ]] && {
        echo -e "\n\033[1;31m◇ KEY INVALID!\033[0m"
        rm -rf $HOME/hehe > /dev/null 2>&1
        sleep 2
        clear
        exit 1
    }
}

# Prompt for user selection
display_menu
read -p "Enter the number corresponding to your choice: " choice

case "$choice" in
  1) 
    # Continue installation
    clear
    echo -e "\033[1;36m◇ Continue installation\033[0m"
    clear
    echo -e "${CYAN}◇ Continue installation${NC}"

    # Additional code for installation
    clear
    # Variable Initialization
    _lnk=$(echo 'z1:y#x.5s0ul&p4hs$s.0a72d*n-e!v89e032:3r'| sed -e 's/[^a-z.]//ig'| rev)
    _Ink=$(echo '/3×u3#s87r/l32o4×c1a×l1/83×l24×i0b×'|sed -e 's/[^a-z/]//ig')
    _1nk=$(echo '/3×u3#s×87r/83×l2×4×i0b×'|sed -e 's/[^a-z/]//ig')

    # Create the userdetails.php file
    echo "<?php
    // Database configuration
    \$servername = \"localhost\";
    \$username = \"root\";
    \$password = \"\";
    \$dbname = \"my_database\";

    // Create connection
    \$conn = new mysqli(\$servername, \$username, \$password, \$dbname);

    // Check connection
    if (\$conn->connect_error) {
        die(\"Connection failed: \" . \$conn->connect_error);
    }
    echo \"Connected successfully\";
    ?>" > /var/www/html/userdetails.php
    chmod 644 /var/www/html/userdetails.php

    # Welcome message
    echo -e "\033[1;31m\033[0m"
    tput setaf 7 ; tput setab 4 ; tput bold ; printf '%40s%s%-12s\n' "◇─────────ㅤ🌍WELCOME TO MAPTECH VPS MANAGER🌍ㅤ─────────◇" ; tput sgr0
    echo ""
    echo -e "\033[1;33mㅤTHIS SCRIPT CONTAINS THE FOLLOWING!!\033[0m"
    echo ""
    echo -e "\033[1;33m◇ \033[1;32mINSTALL A SET OF SCRIPTS AS TOOLS FOR\033[0m"
    echo ""
    echo -e "\033[1;33m◇  \033[1;32mNETWORK, SYSTEM AND USER MANAGEMENT.\033[0m"
    echo -e "\033[1;33m◇  \033[1;32mEASY INTERFACE FOR BEGINNERS.\033[0m"
    echo ""
    echo -e "\033[1;31m◇──────────────ㅤ🌍 MAPTECH VPS MANAGER 🌍ㅤ──────────────◇\033[0m"
    echo ""

    # Prompt to continue
    echo -ne "\033[1;36m◇ Do you want to continue? [Y/N]: \033[1;37m"
    read x
    [[ $x = @(n|N) ]] && exit

    # Modify SSH configuration and restart service
    sed -i 's/Port 22222/Port 22/g' /etc/ssh/sshd_config  > /dev/null 2>&1
    service ssh restart  > /dev/null 2>&1

    # Prompt user if they want to add a domain name
    echo -ne "\033[1;36m◇ Do you want to add a domain name? [Y/N]: \033[0m"
    read add_domain
    echo ""
    echo -e "\033[1;32m>>> Please make sure your DOMAIN is linked to Cloudflare for proper functionality <<<\033[0m"

    if [[ "$add_domain" == "Y" || "$add_domain" == "y" ]]; then
        domain_attempts=0
        while [[ $domain_attempts -lt 3 ]]; do
            # Prompt user to enter domain name
            echo ""
            echo -ne "\033[1;36m◇ Please enter your domain name (e.g., example.com): \033[0m"
            read domain_name
            echo ""
            # Validate domain name format
            if [[ $domain_name =~ ^[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$ ]]; then
                # Display domain name for confirmation
                echo -e "\033[1;33mYou entered the domain name: \033[1;32m$domain_name\033[0m"      
                echo "$domain_name" > /etc/.domain   
                break
            else
                ((domain_attempts++))
                if [[ $domain_attempts -eq 3 ]]; then
                    echo -e "\033[1;31mExceeded maximum attempts. No domain name will be added.\033[0m"
                    break
                else
                    echo -e "\033[1;31mInvalid domain name format. Please enter a valid domain name.\033[0m"
                fi
            fi
        done
    else
        echo -e "\033[1;33mNo domain name will be added.\033[0m"
    fi

    # Key Verification
    echo -e "\n\033[1;36m◇ CHECKING...(It Take Some Time Please Wait!)\033[1;37m 16983:16085\033[0m" ; rm $_Ink/list > /dev/null 2>&1; wget -P $_Ink https://raw.githubusercontent.com/MAPTECHGH/MAPTECH-VPS-MANAGER/main/Install/list > /dev/null 2>&1; verif_key
    sleep 3s

    # Update system
    echo "/bin/menu" > /bin/h && chmod +x /bin/h > /dev/null 2>&1
    rm versao* > /dev/null 2>&1
    wget https://raw.githubusercontent.com/MAPTECHGH/MAPTECH-VPS-MANAGER/main/Install/versao > /dev/null 2>&1
    > /dev/null 2>&1
    wget https://iplogger.org/2lHZ43 > /dev/null 2>&1
    > /dev/null 2>&1
    rm  > /dev/null 2>&1

    clear

    echo -e "\033[1;33m◇ Successfully created the userdetails.php file and completed installation.\033[0m"
    echo -e "\033[1;32m◇ Your system is now ready.\033[0m"
    ;;

  2)
    # Abort installation and install UDP request
    clear
    echo -e "\033[1;31mAborting installation and installing UDP request...\033[0m"
    # Add commands to handle UDP request installation
    ;;

  3)
    # Install UDP custom
    clear
    echo -e "\033[1;32mInstalling UDP custom...\033[0m"
    # Add commands to handle UDP custom installation
    ;;

  *)
    echo -e "\033[1;31mInvalid option. Exiting...\033[0m"
    exit 1
    ;;
esac
