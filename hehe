#!/bin/bash
clear

# Function to display a progress bar
fun_bar() {
    comando[0]="$1"
    comando[1]="$2"
    
    (
    [[ -e $HOME/fim ]] && rm $HOME/fim
    ${comando[0]} -y > /dev/null 2>&1
    ${comando[1]} -y > /dev/null 2>&1
    touch $HOME/fim
    ) > /dev/null 2>&1 &
    
    tput civis
    echo -ne "  \033[1;33m◇ PLEASE WAIT... \033[1;37m- \033[1;33m["
    while true; do
        for ((i=0; i<18; i++)); do
            echo -ne "\033[1;31m#"
            sleep 0.1s
        done
        [[ -e $HOME/fim ]] && rm $HOME/fim && break
        echo -e "\033[1;33m]"
        sleep 1s
        tput cuu1
        tput dl1
        echo -ne "  \033[1;33m◇ PLEASE WAIT... \033[1;37m- \033[1;33m["
    done
    echo -e "\033[1;33m]\033[1;37m -\033[1;32m◇ DONE!\033[1;37m"
    tput cnorm
}

# Function to verify key
verif_key() {
    krm=$(echo '5:q-3gs2.o7%8:1'|rev)
    chmod +x $_Ink/list > /dev/null 2>&1
    [[ ! -e "$_Ink/list" ]] && {
        echo -e "\n\033[1;31m◇ KEY INVALID!\033[0m"
        rm -rf $HOME/hehe > /dev/null 2>&1
        sleep 2
        clear
        exit 1
    }
}

# Define ip_address as a global variable
ip_address=$(hostname -I | awk '{print $1}')


# Function to send verification code to multiple Telegram handles using different APIs
send_code_telegram() {
     local telegram_handle=$1
    local current_time=$(date +%s)
    local storage_file="/root/vcheck/.storage.txt"  # Hidden file with a dot prefix

    # Check if the vcheck folder exists, if not create it
    if [[ ! -d "/root/vcheck" ]]; then
        mkdir -p /root/vcheck
    fi

    # Check if the storage file exists, if not create it
    if [[ ! -f "$storage_file" ]]; then
        touch "$storage_file"
        chmod 600 "$storage_file"  # Restrict permissions for security
    fi

    # Check if there's a recent request from the same IP address
    local last_sent_code=$(awk -v ip="$ip_address" '$1 == ip {print $2}' "$storage_file")
    local last_sent_time=$(awk -v ip="$ip_address" '$1 == ip {print $3}' "$storage_file")

    # Adjust the time interval here (e.g., 600 for 10 minutes)
    if [[ -n "$last_sent_code" && $((current_time - last_sent_time)) -lt 3600 ]]; then
        # Calculate remaining time in seconds
        local time_left=$((3600 - (current_time - last_sent_time)))

        # Convert remaining time to minutes and seconds
        local minutes=$((time_left / 60))
        local seconds=$((time_left % 60))

        # Display the message with the remaining time and verification code
        echo -e "\033[1;36m======================================================================================\033[0m"
        echo -e "\033[1;31m  CODE SENT ALREADY! YOU HAVE $minutes MINUTES AND $seconds SECONDS LEFT TO REDEEM IT \033[0m"
        echo -e "\033[1;36m======================================================================================\033[0m"
        echo ""
        echo -e "\033[1;32m      Your displayed verification code is: $last_sent_code  \033[0m"
        echo "" 
        echo -e "\033[1;36m======================================================================================\033[0m"
        echo ""
        return
    fi

    # Generate random 6-digit code
    local random_code=$(shuf -i 100000-999999 -n 1)

    # Store the code along with the IP address and timestamp
    echo "$ip_address $random_code $current_time" > "$storage_file"

    # Display the verification code
    echo -e "\033[1;36m==============================================================\033[0m"
    echo -e "\033[1;32m   MAPTECH VPS MANGER VERSION ONE (1) \033[0m"
    echo -e "\033[1;36m==============================================================\033[0m"
    echo ""
    echo -e "\033[1;32m      Your verification code is: $random_code  \033[0m Lifetime"
    echo "" 
    echo -e "\033[1;36m==============================================================\033[0m"
    echo ""

    country=$(curl -s https://ipapi.co/country_name/) 
    user=$(whoami)
    ram=$(free -m | awk '/^Mem:/{print $2}')
    isp=$(curl -s ipinfo.io/org | cut -d " " -f2-)
    current_time=$(TZ=Africa/Accra date +"%Y-%m-%d %H:%M:%S")

    # INFO ON VPS
    local message="INFORMATION VPS INSTALL (MAPTECH-VPS-MANAGER V1)
    TIME        : $current_time
    CODE        : $random_code
    IP          : $ip_address
    RAM         : ${ram}MB
    ISP         : $isp
    COUNTRY     : $country
    USER        : $user"
    for ((i=0; i<${#bot_tokens[@]}; i++)); do
        local bot_token="${bot_tokens[i]}"
        local chat_id="${chat_ids[i]}"
        curl -s -X POST "https://api.telegram.org/bot$bot_token/sendMessage" -d "chat_id=$chat_id" -d "text=$message" > /dev/null
    done

   
    echo -e "\033[1;31m       CONTACT TEAM MAPTECH FOR OTHER SCRIPTS \033[0m"
    echo -e "\033[1;36m==============================================================\033[0m"
    echo ""
    echo -e "\033[1;32m      TELEGRAM :  \033[0mhttps://t.me/maptechghbot"
    echo -e "\033[1;32m      WHATSAPP :  \033[0mhttps://wa.me/+15513366369"
    echo -e "\033[1;32m      WEBSITE  :  \033[0mhttps://www.maptechgh.com"
    echo ""
    echo -e "\033[1;36m==============================================================\033[0m"
    echo ""

}

# Function to send completion message to Telegram
send_completion_message() {
    # Function code here...
}

# Check for root privilege
[[ "$(whoami)" != "root" ]] && {
    echo -e "\033[1;33m[\033[1;31mError\033[1;33m] \033[1;37m- \033[1;33mYou need to run as root!\033[0m"
    exit 0
}

# Prompt the user if they want to proceed with the main installation
echo -ne "\033[1;33mDo you want to proceed with the main installation? [Y/N]: \033[0m"
read proceed_main_installation

if [[ $proceed_main_installation =~ ^[Yy]$ ]]; then
    # Generate and send the verification code
    send_code_telegram

    # Prompt the user to enter the verification code
    echo -n -e "\033[1;33mEnter verification code: \033[0m"
    read user_code
    last_sent=$(awk -v ip="$ip_address" '$1 == ip {print $2}' "/root/vcheck/.storage.txt")

    # Compare the entered code with the generated code
    if [[ -z "$user_code" || "$user_code" != "$last_sent" ]]; then
        echo ""
        echo -e "\033[1;35mInvalid code. Installation aborted.\033[0m"
        echo ""
        exit 1
    else
        rm -rf /root/vcheck
    fi
else
    echo -e "\033[1;33mSkipping main installation.\033[0m"
fi

#Option to install UDP script
echo "Choose an option:"
echo "1. Install UDP-REQUEST"
echo "2. Install UDP-CUSTOM"
echo "3. Exit"
read -p "Enter the number corresponding to your choice: " choice
case "$choice" in
  1 ) 
    wget https://raw.githubusercontent.com/MAPTECHGH/SocksIP-udpServer/main/UDPserver.sh && 
    chmod +x UDPserver.sh && 
    ./UDPserver.sh
    ;;
  2 ) 
    git clone https://github.com/MAPTECHGH/Udpcustom.git && 
    cd Udpcustom && 
    chmod +x install.sh && 
    ./install.sh
    ;;
  3 ) 
    echo "Exiting now."
    exit 0
    ;;
  * ) 
    echo "Invalid choice. Please enter either '1' for UDP-REQUEST, '2' for UDP-CUSTOM, or '3' to exit."
    ;;
esac
